import { IPrettyFloatDecimalParam, IPrettyFloatDigitGroupParam, IPrettyFloatPointIndex, IPrettyFloatValue } from '../../interfaces';
import { TCustomCharacter, TInput } from '../../types';
export declare class PrettyFloat {
    private _value;
    private _pointIndex;
    private _hasDecimalPart;
    private _forcedDecimals;
    private _trimmedDecimals;
    private _decimalParams;
    private _digitGroupParams;
    constructor(subject: TInput, decimal?: any, digitGroup?: any);
    get value(): IPrettyFloatValue;
    get pointIndex(): IPrettyFloatPointIndex;
    get forcedDecimals(): number;
    get trimmedDecimals(): string;
    get hasDecimalPart(): boolean;
    get digitGroupDelimiters(): TCustomCharacter[];
    get isNegative(): boolean;
    get prettyValue(): string;
    get numberValue(): number | null;
    get intPart(): number | null;
    get prettyIntPart(): string;
    get decimals(): string;
    get prettyDecimals(): string;
    get decimalParams(): IPrettyFloatDecimalParam;
    get digitGroupParams(): IPrettyFloatDigitGroupParam;
    clone(): PrettyFloat;
    updateIntPartDigitGroupParams(params: any): PrettyFloat;
    updateDecimalsDigitGroupParams(params: any): PrettyFloat;
    updateDigitGroupParams(params: any): PrettyFloat;
    updateDecimalParams(decimal: any): PrettyFloat;
    updateValue(newValue: TInput): PrettyFloat;
    private set digitGroupParams(value);
    private set decimalParams(value);
    private set value(value);
    private updateFloatPointIndices;
    private updateNumberValuePointIndex;
    private updatePrettyValuePointIndex;
    private initValues;
    private setParams;
    private getValueWithoutDecimals;
    private getValueWithDecimals;
    private resetDecimalPartParams;
    private getDecimals;
    private appendZeroDecimals;
    private trimRedundantDecimals;
}
